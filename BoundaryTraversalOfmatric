Boundary Traversal of matrix
Given an m*n matrix, print the boundary traversal of the matrix in clockwise order.

Input Format
First line contains the values m and n.

Next m lines contain n-spaced integers.

Output Format
Print the boundary traversal of the matrix in clockwise order.

Example 1
Input

2 3
1 2 3
1 5 3
Output

1 2 3 3 5 1
Explanation

We can see that while traversing in a clockwise fashion we go in the order of 1, 2, 3, 3, 5, 1.

Example 2
Input

3 4
5 4 6 3
1 4 3 5
5 1 9 6
Output

5 4 6 3 5 6 9 1 5 1
Explanation

We can see that while traversing in a clockwise fashion we go in the order of 5, 4, 6, 3, 5, 6, 9, 1, 5, 1.

Constraints
1 <= n <= 10^3

1 <= m <= 10^3

1 <= mat[i][j] <=10^5


import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int m, n;
        m = sc.nextInt();
        n = sc.nextInt();
        int[][] matrix = new int[m][n];
        for (int i = 0; i < m; i++)
            for (int j = 0; j < n; j++)
                matrix[i][j] = sc.nextInt();

        boundaryTraversal(m, n, matrix);
        sc.close();
    }

    public static void boundaryTraversal(int m, int n, int[][] arr) {
        // your code here
        //if row 1 again top
        if(m==1){
            for(int i=0; i<=n-1; i++){
            System.out.print(arr[0][i]+" ");
        }
        }
        //if col 1 again right
        else if(n==1){
            //right
        for(int i=0; i<=m-1; i++){
            System.out.print(arr[i][n-1]+" ");
        }
        }
        else{
        //top
        for(int i=0; i<n-1; i++){
            System.out.print(arr[0][i]+" ");
        }
        //right
        for(int i=0; i<m-1; i++){
            System.out.print(arr[i][n-1]+" ");
        }
        //bottom
        for(int i=n-1; i>0; i--){
           System.out.print(arr[m-1][i]+" ");
        }
        for(int i=m-1; i>0; i--){
            System.out.print(arr[i][0]+" ");
        }
        }
    }
}
